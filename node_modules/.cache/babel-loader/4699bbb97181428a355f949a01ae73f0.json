{"ast":null,"code":"var _jsxFileName = \"M:\\\\Git-Hub-repositories\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\feedback\\\\FeedbackStatistics.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from 'components/Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FeedbackStatiks extends Component {\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      total,\n      goodPercentage\n    } = this.props;\n    return total ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Good: \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Neutral: \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bad: \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Positive Feedback: \", goodPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n      message: \"No feedback is given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFeedbackStatiks.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  goodPercentage: PropTypes.number.isRequired\n};\nexport default FeedbackStats;","map":{"version":3,"sources":["M:/Git-Hub-repositories/goit-react-hw-02-feedback/src/components/feedback/FeedbackStatistics.jsx"],"names":["React","Component","PropTypes","Notification","FeedbackStatiks","render","good","neutral","bad","total","goodPercentage","props","propTypes","number","isRequired","FeedbackStats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAQtCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAAgD,KAAKC,KAA3D;AAEA,WAAOF,KAAK,gBACV;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAUH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,4BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,8BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,0CAAuBC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAUV,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAVF;AAYD;;AAvBqC;;AAAlCN,e,CACGQ,S,GAAY;AACjBN,EAAAA,IAAI,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEjBP,EAAAA,OAAO,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFT;AAGjBN,EAAAA,GAAG,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAHL;AAIjBL,EAAAA,KAAK,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAJP;AAKjBJ,EAAAA,cAAc,EAAER,SAAS,CAACW,MAAV,CAAiBC;AALhB,C;AAwBrB,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from 'components/Notification/Notification';\r\n\r\nclass FeedbackStatiks extends Component {\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    goodPercentage: PropTypes.number.isRequired,\r\n  };\r\n  render() {\r\n    const { good, neutral, bad, total, goodPercentage } = this.props;\r\n\r\n    return total ? (\r\n      <div>\r\n        <h2>Statistics</h2>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive Feedback: {goodPercentage}%</p>\r\n      </div>\r\n    ) : (\r\n      <Notification message=\"No feedback is given\" />\r\n    );\r\n  }\r\n}\r\nexport default FeedbackStats;\r\n"]},"metadata":{},"sourceType":"module"}